{"ast":null,"code":"var _jsxFileName = \"/Users/pranavmalhotra/Desktop/contact search/contact-search/src/ResultsTable.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport ReactPaginate from \"react-paginate\";\nimport \"./ResultsTable.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResultsTable = ({\n  contacts,\n  onSelectContact\n}) => {\n  _s();\n  const [currentPage, setCurrentPage] = React.useState(0);\n  const itemsPerPage = 2;\n  const [selectedContacts, setSelectedContacts] = React.useState([]);\n  const handlePageChange = ({\n    selected\n  }) => {\n    setCurrentPage(selected);\n  };\n  const currentContacts = contacts.slice(currentPage * itemsPerPage, (currentPage + 1) * itemsPerPage);\n  const handleCheckboxChange = contact => {\n    setSelectedContacts(prev => prev.includes(contact.id) ? prev.filter(id => id !== contact.id) : [...prev, contact.id]);\n  };\n  const isChecked = contactId => selectedContacts.includes(contactId);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"DOB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"State\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Zip\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: currentContacts.map(contact => /*#__PURE__*/_jsxDEV(\"tr\", {\n          onClick: () => onSelectContact(contact),\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: isChecked(contact.id),\n              onChange: e => {\n                e.stopPropagation(); // Prevent row click on checkbox change\n                handleCheckboxChange(contact);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: `${contact.firstName} ${contact.lastName}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: contact.dob\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: contact.address.street\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: contact.address.city\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: contact.address.state\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: contact.address.zip\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: contact.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: contact.phone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)]\n        }, contact.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactPaginate, {\n      pageCount: Math.ceil(contacts.length / itemsPerPage),\n      onPageChange: handlePageChange,\n      containerClassName: \"pagination\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(ResultsTable, \"rFZIiOLG7P0j4KPq8ltsxSxCXkM=\");\n_c = ResultsTable;\nexport default ResultsTable;\nvar _c;\n$RefreshReg$(_c, \"ResultsTable\");","map":{"version":3,"names":["React","ReactPaginate","jsxDEV","_jsxDEV","ResultsTable","contacts","onSelectContact","_s","currentPage","setCurrentPage","useState","itemsPerPage","selectedContacts","setSelectedContacts","handlePageChange","selected","currentContacts","slice","handleCheckboxChange","contact","prev","includes","id","filter","isChecked","contactId","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","type","checked","onChange","e","stopPropagation","firstName","lastName","dob","address","street","city","state","zip","email","phone","pageCount","Math","ceil","length","onPageChange","containerClassName","_c","$RefreshReg$"],"sources":["/Users/pranavmalhotra/Desktop/contact search/contact-search/src/ResultsTable.js"],"sourcesContent":["import React from \"react\";\nimport ReactPaginate from \"react-paginate\";\nimport \"./ResultsTable.css\";\n\nconst ResultsTable = ({ contacts, onSelectContact }) => {\n  const [currentPage, setCurrentPage] = React.useState(0);\n  const itemsPerPage = 2;\n  const [selectedContacts, setSelectedContacts] = React.useState([]);\n\n  const handlePageChange = ({ selected }) => {\n    setCurrentPage(selected);\n  };\n\n  const currentContacts = contacts.slice(\n    currentPage * itemsPerPage,\n    (currentPage + 1) * itemsPerPage\n  );\n\n  const handleCheckboxChange = (contact) => {\n    setSelectedContacts((prev) =>\n      prev.includes(contact.id)\n        ? prev.filter((id) => id !== contact.id)\n        : [...prev, contact.id]\n    );\n  };\n\n  const isChecked = (contactId) => selectedContacts.includes(contactId);\n\n  return (\n    <div>\n      <table>\n        <thead>\n          <tr>\n            <th>Select</th>\n            <th>Name</th>\n            <th>DOB</th>\n            <th>Address</th>\n            <th>City</th>\n            <th>State</th>\n            <th>Zip</th>\n            <th>Email</th>\n            <th>Phone</th>\n          </tr>\n        </thead>\n        <tbody>\n          {currentContacts.map((contact) => (\n            <tr key={contact.id} onClick={() => onSelectContact(contact)}>\n              <td>\n                <input\n                  type=\"checkbox\"\n                  checked={isChecked(contact.id)}\n                  onChange={(e) => {\n                    e.stopPropagation(); // Prevent row click on checkbox change\n                    handleCheckboxChange(contact);\n                  }}\n                />\n              </td>\n              <td>{`${contact.firstName} ${contact.lastName}`}</td>\n              <td>{contact.dob}</td>\n              <td>{contact.address.street}</td>\n              <td>{contact.address.city}</td>\n              <td>{contact.address.state}</td>\n              <td>{contact.address.zip}</td>\n              <td>{contact.email}</td>\n              <td>{contact.phone}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <ReactPaginate\n        pageCount={Math.ceil(contacts.length / itemsPerPage)}\n        onPageChange={handlePageChange}\n        containerClassName={\"pagination\"}\n      />\n    </div>\n  );\n};\n\nexport default ResultsTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}